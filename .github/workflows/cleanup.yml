name: Cleanup Old Cache
on:
  workflow_call:
    inputs:
      name:
        description: "Cache name (e.g. Next.js, Cypress, Yarn, NPM)"
        required: true
        type: string
      pattern:
        description: "Cache key pattern (e.g. nextjs-linux-x64-)"
        required: true
        type: string
      branch:
        description: "The branch name to filter cache keys, defaults to all branches"
        type: string

jobs:
  cleanup:
    name: Cache cleanup
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      REPO: ${{ github.repository }}
      BRANCH_FILTER: ${{ inputs.branch != '' && format('-B {0}', inputs.branch) || '' }}
    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v3
      - name: 🧽 Cleanup
        run: |
          function clearCaches {
              KEY_PATTERN="$1"
              echo -e "\nFetching list of cache keys for $2...\n"
              cacheKeys=$(gh actions-cache list -R $REPO $BRANCH_FILTER --key $KEY_PATTERN --sort created-at --order desc | cut -f 1,3 )
              noOfCacheKeys=$(echo "$cacheKeys" | sed '/^\s*$/d' | wc -l) || 0
              toDelete=$(( $noOfCacheKeys - 1 >= 0 ? $noOfCacheKeys - 1 : 0 ))
              echo "Found $(( $noOfCacheKeys )) $2 cache keys, deleting $toDelete cache(s)."

              ## Setting this to not fail the workflow while deleting cache keys. 
              set +e
              echo "$(tail -n +2 <<< "$cacheKeys")" | while read -r line; do
                cacheKey=$(echo "$line" | cut -f 1)
                branch=$(echo "$line" | cut -f 2)
                echo "Deleting $2 cache: $cacheKey @ $branch"
                gh actions-cache delete $cacheKey -R $REPO -B $branch --confirm
              done
          }
          gh extension install actions/gh-actions-cache
          clearCaches "${{ inputs.pattern }}" "${{ inputs.name }}"
          echo -e "\nCache deletion done!"
